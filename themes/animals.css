/* themes/animals.css */

/* --- Animals Theme --- */
body.theme-animals { --body-bg-gradient: linear-gradient(to bottom, #dcedc8 0%, #a5d6a7 100%); background-image: var(--body-bg-gradient); }
.theme-animals-card { background: linear-gradient(145deg, #fffde7 60%, #fff9c4 100%); border: 3px solid #795548; box-shadow: 0 8px 25px rgba(121, 85, 72, 0.2), 0 0 10px rgba(240, 229, 217, 0.5) inset; }
.theme-animals-card .team-name-display .name-text { color: #4e342e; }
.theme-animals-card .team-name-display { background-color: rgba(161, 136, 127, 0.6); }

.animals-visual {
    width: 95%;
    height: 300px;
    position: relative;
    margin-bottom: 10px;
    background-color: #efebe9;
    border-radius: 10px;
    border: 3px solid #bcaaa4;
    overflow: hidden;
}

.theme-item.paw { 
    font-size: 1.8em; color: #8d6e63; position: absolute; opacity: 0; 
    transform: scale(0) rotate(var(--initial-rotate, 0deg)); 
}
.theme-item.animate-pop { animation: appear-paw 0.5s ease-out 0.1s forwards; }
.theme-item.animate-shrink { animation: disappear-paw 0.4s ease-in forwards; }
@keyframes appear-paw { from { opacity: 0; transform: scale(0.5) rotate(var(--initial-rotate, 0deg)); } to { opacity: 0.8; transform: scale(1) rotate(var(--initial-rotate, 0deg)); } }
@keyframes disappear-paw { from { opacity: 0.8; transform: scale(1) rotate(var(--initial-rotate, 0deg)); } to { opacity: 0; transform: scale(0.3) rotate(var(--initial-rotate, 0deg)); } }

.theme-animals-card .score-number { color: #5d4037; }

/* --- WINNER ANIMATION (FIXED) --- */
.theme-animals-card.animals-winner .animals-visual { border-color: #ffc107; background-color: #fff8e1; }
.theme-animals-card.animals-winner .theme-item.paw.dancing {
    animation: appear-paw 0.5s ease-out forwards, wiggle-paw 0.8s linear infinite alternate;
    color: #a1887f;
    opacity: 1;
    animation-delay: 0s, calc(var(--item-index, 0) * 0.05s);
    transform: rotate(var(--initial-rotate, 0deg)) scale(1);
}
@keyframes wiggle-paw {
    from { transform: rotate(calc(var(--initial-rotate, 0deg) - 12deg)) scale(1.1); }
    to { transform: rotate(calc(var(--initial-rotate, 0deg) + 12deg)) scale(1.1); }
}